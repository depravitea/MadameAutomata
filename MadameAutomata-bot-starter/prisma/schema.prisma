generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model GuildConfig {
  id           String   @id @default(cuid())
  guildId      String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  welcomeChan  String?
  logChan      String?
  ticketCatId  String?
  theme        String   @default("crimson-onyx-ivory")
  nsfwEnabled  Boolean  @default(true)
}

model MemberProfile {
  id           String   @id @default(cuid())
  guildId      String
  userId       String
  roleType     String?  // dom, sub, switch
  pronouns     String?
  ageVerified  Boolean  @default(false)
  bio          String?
  limits       String?  // JSON string for simplicity; could be relation later
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([guildId, userId])
}

model Ownership {
  id           String   @id @default(cuid())
  guildId      String
  ownerId      String
  subjectId    String
  since        DateTime @default(now())
  contractId   String?

  @@unique([guildId, ownerId, subjectId])
}

model Contract {
  id        String   @id @default(cuid())
  guildId   String
  title     String
  terms     String
  createdBy String
  createdAt DateTime @default(now())
}

model SafewordLog {
  id        String   @id @default(cuid())
  guildId   String
  userId    String
  tier      String   // yellow, red, black
  context   String?
  createdAt DateTime @default(now())
}

model Task {
  id        String   @id @default(cuid())
  guildId   String
  assigner  String
  assignee  String
  title     String
  details   String?
  dueAt     DateTime?
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Punishment {
  id        String   @id @default(cuid())
  guildId   String
  userId    String
  type      String   // gag, blindfold, lines, wheel...
  reason    String?
  expiresAt DateTime?
  createdBy String
  createdAt DateTime @default(now())
}

model EconomyAccount {
  id        String   @id @default(cuid())
  guildId   String
  userId    String
  favor     Int      @default(0)
  gems      Int      @default(0)

  @@unique([guildId, userId])
}

model Ticket {
  id        String   @id @default(cuid())
  guildId   String
  userId    String
  channelId String
  type      String   // mod, scene-support, report
  open      Boolean  @default(true)
  createdAt DateTime @default(now())
}

model Ritual {
  id        String   @id @default(cuid())
  guildId   String
  userId    String
  type      String   // morning, evening, posture, mantra
  lastRun   DateTime?
  createdAt DateTime @default(now())
}

